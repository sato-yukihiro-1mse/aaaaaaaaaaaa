// ConsoleApplication20.cpp : このファイルには 'main' 関数が含まれています。プログラム実行の開始と終了がそこで行われます。
//

#include <iostream>
#include <string>
#include <fstream>
#include <vector>
#include <cassert>
#include <regex>
#include <codecvt>
#include <ostream>
using namespace std;

struct Member {
protected:
    int no;   //会員No
    string name; //名前
    int age;  //年齢
    int income; //収入

public:
    Member(int newNo,const string& newName, int newAge,int newIncome) :no(newNo),name(newName), age(newAge),income(newIncome) {}
    void setNo(int newNo) { no = newNo; }
    int getNo() { return no; }
    void setName(const string& newName) { name = newName; }//nameにアクセスするメンバ関数
    string getName() { return name; } //getNameを返す
    void setAge(int newAge) { age = newAge; }
    int getAge() { return age; }
    void setIncome(int newIncome) { income = newIncome; }
    int getIncome() { return income; }

};





auto file_input(int gender) {//データを入力させ,データをファイルに追記する関数。
    
    //会員No,名前,年齢,年収を格納する変数
    int no, age, income;
    string name;

    //利用者にデータを入力させる

    cout << "あなたの氏名を入力してください." << endl;
    cin >> name;
    cout << "あなたの年齢を入力してください." << endl;
    cin >> age;
    cout << "あなたの収入を入力してください:～万円" << endl;
    cin >> income;


    //利用者が男性の場合men_member.datファイルにデータが追記される。
    if (gender == 1) {
        ifstream infile("men_member.dat");
        string line;
        int no=1;//会員番号
        
        //ファイルの行数から新規Noを計算する。
        while (getline(infile, line)) {
            no++;
        }
       
        //ファイルに追記される。
        ofstream outfile1("men_member.dat", ios_base::app);
        outfile1 << no << " " << name << " " << age << " " << income << endl;
      
    }

    //利用者が女性の場合
    else {

        ifstream infile("women_member.dat");
        string line;
        int no=1;//会員番号
        int number_of_line;//ファイルの行数をカウントする変数
        while (getline(infile, line)) {
            no++;
        }
        
        ofstream outfile2("women_member.dat", ios_base::app);
        outfile2 << no << " " << name << " " << age << " " << income << endl;
       
    }
}


//相手に希望する年齢,年収から条件に合致する相手を検索する.
void result(int gender) {
   
  
    string getName;
    int count = 0;
    int getNo;
    int getAge;
    int getIncome;
    string str, name;
    int no, age, income;

    //最低年齢,最高年齢,最低年収を格納する変数。
    int requestedLowAge, requestedHighAge;
    int requestedLowIncome;
    int newNo;

    //相手に希望する条件を入力させる。

    cout << "相手の希望年齢を教えてください。\n最低年齢:" << endl;
    cin >> requestedLowAge;
    cout << "相手の希望年齢を教えてください。\n最高年齢:" << endl;
    cin >> requestedHighAge;
    cout << "相手の希望最低年収を教えてください。" << endl;
    cin >> requestedLowIncome;

    //利用者が男性の場合女性登録者ファイルから条件に合致する人を探す。

    if (gender == 1) {
        //
        vector<Member> memberVec;
        
        ifstream datafile("women_member.dat");
        string getName, name;
        int getNo, getAge, getIncome;
        //int no, age, income;
        while (datafile >> getNo >> getName >> getAge >> getIncome) {
            int no = getNo;
            string name = getName;
            int age = getAge;
            int income = getIncome;
            Member getName{ no,name,age,income };

            //条件分岐
            if (income > requestedLowIncome && age< requestedHighAge && age>requestedLowAge) {

                memberVec.push_back(getName);
                
           }
        }
        cout << "---結果表示---" << endl;
        for (auto p : memberVec)cout << "No:" << p.getNo() << " 氏名：" << p.getName() << " 年齢:" << p.getAge() << " 年収：" << p.getIncome() << "万円\n";
           
        }
       
        
     




    if (gender == 2) {
        vector<Member> memberVec;
        ifstream datafile("men_member.dat");
        string getName, name;
        int getNo, getAge, getIncome;


    //ファイル読み込み
        while (datafile >> getNo >> getName >> getAge >> getIncome) {
            int no = getNo;
            string name = getName;
            int age = getAge;
            int income = getIncome;
            Member getName{ no,name,age,income };
            if (income > requestedLowIncome && age< requestedHighAge && age>requestedLowAge) {

                memberVec.push_back(getName);
            }
        }
        //条件に合致した人を表示
        cout << "---結果表示---" << endl;
        for (auto p : memberVec)cout << "No:" << p.getNo() << " 氏名：" << p.getName() << " 年齢:" << p.getAge() << " 年収：" << p.getIncome() << "万円\n";

    }
}


int main()
{

  
    int gender;//性別を格納する.

    cout << "あなたの性別は？1:男性,2:女性" << endl;
    cin >> gender;

    //名前,年齢,年収を入力させファイルに保存する関数
    file_input(gender);

    //相手に希望する条件を入力させ条件に合致する人を表示する関数。
    result(gender);
   
}
   
    

// プログラムの実行: Ctrl + F5 または [デバッグ] > [デバッグなしで開始] メニュー
// プログラムのデバッグ: F5 または [デバッグ] > [デバッグの開始] メニュー

// 作業を開始するためのヒント: 
//    1. ソリューション エクスプローラー ウィンドウを使用してファイルを追加/管理します 
//   2. チーム エクスプローラー ウィンドウを使用してソース管理に接続します
//   3. 出力ウィンドウを使用して、ビルド出力とその他のメッセージを表示します
//   4. エラー一覧ウィンドウを使用してエラーを表示します
//   5. [プロジェクト] > [新しい項目の追加] と移動して新しいコード ファイルを作成するか、[プロジェクト] > [既存の項目の追加] と移動して既存のコード ファイルをプロジェクトに追加します
//   6. 後ほどこのプロジェクトを再び開く場合、[ファイル] > [開く] > [プロジェクト] と移動して .sln ファイルを選択します
